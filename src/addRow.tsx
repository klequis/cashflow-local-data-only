import { createEffect } from "solid-js";
const log = console.log;

export default function AddRow(props) {
  // Not taking advantage of reactivity
  // Don't see any need to?
  //
  // Use autogenerated random IDs?
  // OR
  // Do I need sequential IDS for sorting
  // I think not because I will be sorting by Date maybe Date only.
  const newRow: Row = {
    id: props.id,
    date: new Date(),
    amount: 0,
    balance: 0,
    label: "",
  };

  const addRow = () => {
    props.addNewRow(newRow);
  };

  const dateChange = (e) => {
    const v = e.currentTarget.value;
    log("new date:", v);
    newRow.date = v;
  };

  const amountChange = (e) => {
    const v = e.currentTarget.value;
    log("new amount:", v);
    newRow.amount = v;
  };

  const lableChange = (e) => {
    const v = e.currentTarget.value;  
    log("new label:", v);
    newRow.label = v;
  };


  return (
    <tr>
      {/* <td>{getNextRowId()}</td> */}
      {/* <td>{new Date().toLocaleDateString()}</td> */}
      <td>
        <input type="date" name="date" value={newRow.date.toISOString().split('T')[0]} onChange={dateChange} />
        
        {/* <input type="date" name="date" value={"2018-07-22"} onChange={dateChange} /> */}
      </td>
      <td>
        <input type="number" name="amount" value={newRow.amount} onChange={amountChange} />
      </td>
      <td>500</td>
      <td>
        {/* <input type="text" onInput={(e) => console.log("input", e.currentTarget.value)} onChange={(e) => console.log("change", e.currentTarget.value)} />    */}
        <input type="text" name="label" value={newRow.label} placeholder="enter label" onChange={lableChange} />
      </td>
      {/* <td>
        <input type="button" name="add" value="add" />
      </td> */}
      <td>
        <button name="add" onClick={addRow}>
          Add
        </button>
      </td>
    </tr>
  );
}
